asyncapi: 2.2.0

info:
  title: Hairsap Sockets
  version: 1.0.0
  description: |
    This is the documentation for hairsap sockets api.

servers:
  prod:
    url: staging.hairsap.com/socket.io
    protocol: wss
  dev:
    url: localhost:4000/socket.io
    protocol: ws

channels:
  /:
    publish:
      message:
        oneOf:
          - $ref: "#/components/messages/NewMessage"
          - $ref: "#/components/messages/Location"
    subscribe:
      message:
        oneOf:
          - $ref: "#/components/messages/Notification"
          - $ref: "#/components/messages/Booking"

components:
  messages:
    NewMessage:
      name: new message
      contentType: application/json
      description: new chat message from client
      examples:
        - payload:
            message: 'june'
            photoUrl: 'https://google.com'
            senderId: 1
            receiverId: 2
            messageType: 'text'
      payload:
        type: object
        required: [createdAt,senderId,receiverId,messageType]
        properties:
          message:
            type: string
          photoUrl:
            type: string
          receiverId:
            type: number
          messageType:
            type: string
            enum: [text, photo]
      x-ack: # Documents that this event is always acknowledged by the receiver
        args:
          type: object
          properties:
            oneOf:
            - error:
              type: [string, Object]
            - data:
              type: Object
    Location:
      name: location
      contentType: application/json
      description: update user location
      examples:
        - payload:
            userId: 1
            longitude: 1.2
            latitude: 3.4
      payload:
        type: object
        required: [userId,longitude,latitude]
        properties:
          userId:
            type: number
          longitude:
            type: number
          latitude:
            type: number
      x-ack: # Documents that this event is always acknowledged by the receiver
        args:
          type: object
          properties:
            oneOf:
            - error:
              type: [string, Object]
          
    Notification:
      name: notification
      contentType: application/json
      description: notifications
      examples:
        - payload:
            userId: 1
            title: 'New Booking'
            body: 'You have received a new booking'
      payload:
        type: object
        required: [userId]
        properties:
          userId:
            type: number
          title:
            type: string
          body:
            type: string
    Booking:
      name: booking
      contentType: application/json
      description: booking statuses
      examples:
        - payload:
            userId: 1
            bookingId: 2
            status: 'completed'
      payload:
        type: object
        required: [userId,bookingId,status]
        properties:
          userId:
            type: number
          bookingId:
            type: string
          status:
            type: string
            enum: [accepted, completed, rejected, in transit, arrived]


  channelBindings:
    AuthenticatedWsBindings:
      ws:
        query:
          type: object
          properties:
            token:
              type: string
            role:
              type: string
              enum: [admin,user,pro]
          required: [token]